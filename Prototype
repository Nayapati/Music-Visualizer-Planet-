public class Note implements<Note>
{
   private int length = 0;
   
   private int value = 0;
   
   private String note = null;
   
   private boolean isNatural = false;
   
   private double frequency = 0;
   
   /**  
      Class constructor that creates a note with the give
      value, length, frequency, and note name.
      
      @param note The letter chosen by the user
      @param value The value of the chosen note
      @param length The length of the chosen note
      @param frequency The frequency of the note
      @param isNatural Determines whether the note is sharp or natural
   */
   
   public Note( String note, int value, int length, double frequency, boolean isNatural)
   {
      this.note = note;
      this.value = value;
      this.length = length;
      this.frequency = frequency;
      this.isNatural = isNatural;
      
   }
   
   /**
      The accessor method getNote returns
      the value of note.
      @return The value stored in note.
   */
   
   public String getNote()
   {
      return note;
   }
   
   /**
      The accessor method getValue returns
      the value of value.
      @return The value stored in value.
   */

   public int getValue()
   {
      return value;
   }
   
   /**
      The accessor method getLength returns
      the value of length.
      @return The value stored in length.
   */
   
   public int getLength()
   {
      return length;
   }
   
   /**
      The accessor method getFrequency returns
      the value of frequency/
      @return The value store in frequency.
   */
   
   public double getFrequency()
   {
      return frequency
   }
   
    /**
      The accessor method getIsNatural returns
      the value of isNatural.
      @return The value stored in isNatural.
   */
   
   public boolean getIsNatural()
   {
      return isNatural;
   }
   
    /**
      The mutator method setValue stores a value
      in the variable value.
      @param userName The input to be stored in value.
   */
   
   public void setValue( int value)
   {
      this.value = value;
   }
    /**
      The mutator method setLength stores a value
      in the variable length.
     
      @param userName The input to be stored in length.
   */
   public void setLength( int length)
   {
      this.length = length;
   }
   
    /**
      The mutator method setLength stores a value
      in the variable length.
      @param userName The input to be stored in length.
   */
   
   public double setFrequency(double frequency)
   {
      frequency = 440 * Math.pow(2, ((double) value / 12));
   }
   
    /**
      The mutator method setLength stores a value
      in the variable length.
      @param userName The input to be stored in length.
   */
   
   public boolean setIsNatural (boolean isNatural)
   {
      this.isNatural = isNatural;
   }
   
   public int compareTo(Note a)
   {
	   if ((this.frequency) == ((Note) a).frequency)
	   {
		   return 0;
	   }
	   
	   else if ((this.frequency) < ((Note)a).frequency)
	   {
		   return -1;
	   }
	   
	   else
	   {
		   return 1;
	   }
   }
      
}
